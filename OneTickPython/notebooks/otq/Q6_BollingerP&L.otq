
[Strategy]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
HIDDEN_COLUMN = BANDWIDTH WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = CASH_POSITION WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = DIRECTION WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = HOLDINGS WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = HOLDINGS_VALUE WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = INTERVAL WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = PURCHASES WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = P_AND_L WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = SALES WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = SIZE WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = STDDEV WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = SYMBOL_NAME WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = TICK_TIME WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = TICK_TYPE WHERE_CLAUSE_FULL_DEMO_L1::MSFT
HIDDEN_COLUMN = signal WHERE_CLAUSE_FULL_DEMO_L1::MSFT
NODE_50 = NESTED_OTQ Q6_BollingerP&L.otq::BollingerBands
NODE_50_MINIMIZED = 1
NODE_50_PARAMETER = BANDWIDTH $BANDWIDTH
NODE_50_PARAMETER = INTERVAL $INTERVAL
NODE_50_X = 1156
NODE_50_Y = 158
one_to_many_symbol_mapping = 0
PARAMETER = BANDWIDTH 1
PARAMETER = INTERVAL 60
PARAMETER = DETAIL true
QUERY_BATCH_SIZE = 0
ROOT = NESTED_OTQ Q6_BollingerP&L.otq::CalcPandL
ROOT_MINIMIZED = 1
ROOT_PARAMETER = DETAIL $DETAIL
ROOT_SOURCE =  NODE_50.NODE_8.ROOT
ROOT_SOURCE_DESCRIPTION = NODE_50.NODE_8.ROOT IN.out
ROOT_X = 1156
ROOT_Y = 484
SECURITY = FULL_DEMO_L1::MSFT 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_AddBollingerBands]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
HIDDEN_COLUMN = STDDEV.STDEV RENAME_FIELDS_REUTERS::IBM.558
NODE_2 = COMPUTE(COMPUTE="AVERAGE, STDDEV",SHOW_ALL_FIELDS=true,BUCKET_INTERVAL="$INTERVAL",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_2_COMMENT = this node adds fields AVERAGE and STDDEV to the input ticks, is_running_aggr=TRUE parameter makes these sliding window calculations
NODE_2_NESTED_INPUT =  IN
NODE_2_X = 1216
NODE_2_Y = 518
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = ADD_FIELDS(FIELDS="UBAND=AVERAGE+($BANDWIDTH*STDDEV),\
LBAND=AVERAGE-($BANDWIDTH*STDDEV),\
BANDWIDTH=$BANDWIDTH,\
INTERVAL=$INTERVAL")
ROOT_COMMENT = Add upper/lower bands based on AVERAGE/STDDEV/number of SIGMAS
ROOT_NESTED_OUTPUT =  OUT_WITH_BBANDS
ROOT_SOURCE =  NODE_2
ROOT_X = 1220
ROOT_Y = 858
SECURITY = FULL_DEMO_L1::CSCO 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_Clean]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_10 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_10_NAME = TRD
NODE_10_NESTED_INPUT =  TRD_IN
NODE_10_TICK_TYPE = TRD
NODE_10_X = 470
NODE_10_Y = 256
NODE_14 = MID
NODE_14_NAME = QTE
NODE_14_SOURCE =  NODE_9..IF
NODE_14_X = 1288
NODE_14_Y = 726
NODE_16 = JOIN_BY_TIME(SOURCE_ORDER="TRD,QTE",LEADING_SOURCES=TRD)
NODE_16_SOURCE =  NODE_10 NODE_14
NODE_16_X = 978
NODE_16_Y = 988
NODE_17 = TABLE(FIELDS="TRD.PRICE, TRD.SIZE,QTE.MID")
NODE_17_COMMENTED_OUT = 1
NODE_17_SOURCE =  NODE_19..IF
NODE_17_X = 1144
NODE_17_Y = 1478
NODE_19 = WHERE_CLAUSE(WHERE="TRD.PRICE>=QTE.BID_PRICE and TRD.PRICE<=QTE.ASK_PRICE")
NODE_19_SOURCE =  NODE_16
NODE_19_X = 1136
NODE_19_Y = 1186
NODE_5 = PASSTHROUGH(FIELDS="BID_PRICE, ASK_PRICE",GO_BACK_TO_FIRST_TICK=60)
NODE_5_NESTED_INPUT =  QTE_IN
NODE_5_TICK_TYPE = QTE
NODE_5_X = 1356
NODE_5_Y = 228
NODE_9 = WHERE_CLAUSE(WHERE="ASK_PRICE>0 and BID_PRICE > 0")
NODE_9_SOURCE =  NODE_5
NODE_9_X = 1354
NODE_9_Y = 514
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = RENAME_FIELDS(RENAME_FIELDS="TRD.PRICE=PRICE, TRD.SIZE=SIZE, QTE.MID=MID")
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_17
ROOT_X = 1270
ROOT_Y = 1794
SECURITY = FULL_DEMO_L1::CSCO 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[BollingerBands]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_16 = ADD_FIELD(FIELD=signal,VALUE="\"BUY\"")
NODE_16_SOURCE =  NODE_7..IF
NODE_16_X = 690
NODE_16_Y = 1154
NODE_17 = ADD_FIELD(FIELD=signal,VALUE="\"SELL\"")
NODE_17_SOURCE =  NODE_9..IF
NODE_17_X = 1058
NODE_17_Y = 1164
NODE_25 = LAST_TICK
NODE_25_SOURCE =  NODE_50..ROOT
NODE_25_SOURCE_DESCRIPTION = NODE_50..ROOT .OUT
NODE_25_X = 1696
NODE_25_Y = 584
NODE_26 = ADD_FIELD(FIELD=signal,VALUE="\"CLOSE\"")
NODE_26_COMMENT = assume that at end of day we wish to close position out
NODE_26_SOURCE =  NODE_25
NODE_26_X = 1696
NODE_26_Y = 1172
NODE_47 = ADD_FIELD(FIELD=signal,VALUE="\" \"")
NODE_47_SOURCE =  NODE_9..ELSE
NODE_47_X = 1302
NODE_47_Y = 1162
NODE_50 = NESTED_OTQ Q6_BollingerP&L.otq::_Clean
NODE_50_COMMENT = Discard zero quotes. Discard trades outside prevailing bid/ask
NODE_50_MINIMIZED = 1
NODE_50_X = 1364
NODE_50_Y = 84
NODE_51 = NESTED_OTQ Q6_BollingerP&L.otq::_AddBollingerBands
NODE_51_COMMENT = call nested function to add upper/ lower bands
NODE_51_MINIMIZED = 1
NODE_51_PARAMETER = BANDWIDTH $BANDWIDTH
NODE_51_PARAMETER = INTERVAL $INTERVAL
NODE_51_SOURCE =  NODE_50.NODE_2.ROOT
NODE_51_SOURCE_DESCRIPTION = NODE_50.NODE_2.ROOT IN.OUT
NODE_51_X = 796
NODE_51_Y = 338
NODE_7 = WHERE_CLAUSE(WHERE="PRICE < LBAND and PRICE[-1] >= LBAND[-1]")
NODE_7_COMMENT = BUY signal where price is below lower band and prior price was at or above lower band
NODE_7_SOURCE =  NODE_51..ROOT
NODE_7_SOURCE_DESCRIPTION = NODE_51..ROOT .OUT_WITH_BBANDS
NODE_7_X = 814
NODE_7_Y = 648
NODE_9 = WHERE_CLAUSE(WHERE="PRICE > UBAND and PRICE[-1] <= UBAND[-1]")
NODE_9_COMMENT = SELL signal where price is above upper band and prior price was at or below upper band
NODE_9_SOURCE =  NODE_7..ELSE
NODE_9_X = 1182
NODE_9_Y = 906
one_to_many_symbol_mapping = 0
PARAMETER = BANDWIDTH 1
PARAMETER = INTERVAL 200
QUERY_BATCH_SIZE = 0
ROOT = MERGE
ROOT_NESTED_OUTPUT =  out
ROOT_SOURCE =  NODE_16 NODE_17 NODE_47 NODE_26
ROOT_X = 1142
ROOT_Y = 1372
SECURITY = FULL_DEMO_L1::CSCO 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[CalcPandL]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_1 = WHERE_CLAUSE(WHERE="(signal=\"CLOSE\" and \"$DETAIL\"!=\"true\") or \"$DETAIL\"=\"true\"")
NODE_10 = UPDATE_FIELDS(SET="DIRECTION=1, STATE::SALES=STATE::SALES+1",WHERE="signal=\"SELL\"")
NODE_10_SOURCE =  NODE_9
NODE_10_X = 1474
NODE_10_Y = 922
NODE_1_SOURCE =  NODE_2
NODE_1_X = 1474
NODE_1_Y = 1494
NODE_2 = UPDATE_FIELDS(SET="CASH_POSITION=STATE::CASH_POSITION,\
HOLDINGS=STATE::HOLDINGS,\
HOLDINGS_VALUE=STATE::HOLDINGS*PRICE,\
P_AND_L=STATE::CASH_POSITION+(STATE::HOLDINGS*MID),\
SALES=STATE::SALES,\
PURCHASES=STATE::PURCHASES")
NODE_2_SOURCE =  NODE_3
NODE_2_X = 1474
NODE_2_Y = 1298
NODE_3 = UPDATE_FIELDS(SET="STATE::CASH_POSITION=STATE::CASH_POSITION+(MID*DIRECTION),\
STATE::HOLDINGS=STATE::HOLDINGS-DIRECTION")
NODE_3_SOURCE =  NODE_10
NODE_3_X = 1474
NODE_3_Y = 1118
NODE_4 = DECLARE_STATE_VARIABLES(VARIABLES="double CASH_POSITION=0,HOLDINGS=0,PURCHASES=0,SALES=0")
NODE_4_SOURCE =  NODE_7
NODE_4_X = 1474
NODE_4_Y = 514
NODE_7 = ADD_FIELDS(FIELDS="DIRECTION int=0, \
CASH_POSITION double=0,\
 HOLDINGS int=0,\
 HOLDINGS_VALUE double=0,\
 P_AND_L double=0,\
PURCHASES int=0,\
SALES int=0")
NODE_7_SOURCE =  NODE_8..IF
NODE_7_X = 1474
NODE_7_Y = 334
NODE_8 = WHERE_CLAUSE(WHERE="signal!=\"NA\"")
NODE_8_NESTED_INPUT =  IN
NODE_8_X = 1474
NODE_8_Y = 122
NODE_9 = UPDATE_FIELDS(SET="DIRECTION=-1, STATE::PURCHASES=STATE::PURCHASES+1",WHERE="signal=\"BUY\"")
NODE_9_SOURCE =  NODE_4
NODE_9_X = 1474
NODE_9_Y = 710
one_to_many_symbol_mapping = 0
PARAMETER = DETAIL true
QUERY_BATCH_SIZE = 0
ROOT = TABLE(FIELDS="P_AND_L,SALES,PURCHASES,CASH_POSITION,HOLDINGS_VALUE,INTERVAL,BANDWIDTH,INT,BAN")
ROOT_COMMENTED_OUT = 1
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_1..IF
ROOT_X = 1474
ROOT_Y = 1708
SHOW_TEMPLATE = 
TYPE = GRAPH

[_meta]
app_version = OneTick Display Build tag: BUILD_20140911150333 Build timestamp : 20140911150333
ApplyTimesDaily = 0
end = 20060601160000000
file_version = 1.0
RunningQuery = 0
start = 20060601093000000
SYMBOL_DATE = 
TZ = EST5EDT
