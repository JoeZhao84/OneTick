
[MAIN]
COMMENT = Run all 3 analyses for each FILL\
      OffsetByTime - Join with QTE ticks where QTE dicks are enhanced with forward and back figures using tie_shift()\
      OffsetByTick - Join with TRD-QTE joins where each right hand tick is enhanced with forward and back data using [index]\
      Runniing TRD aggregation where each aggregation is enhanced with forward (by time or tick) aggregation for the same bucket size
CPU_NUMBER = 12
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_70 = CSV_FILE_QUERY(FILE="$CSV_FILE")
NODE_70_TICK_TYPE = $CSV_DB::FILL
NODE_70_X = 2028
NODE_70_Y = 116
NODE_75 = PASSTHROUGH(FIELDS="TIMESTAMP,SYMBOL_NAME",DROP_FIELDS=true)
NODE_75_SOURCE =  NODE_70
NODE_75_X = 2028
NODE_75_Y = 354
NODE_76 = NESTED_OTQ ___ME___::_OffsetByTime
NODE_76_COMMENT = Find bid and ask price at N seconds before and after fill time, where N is 1,15,... etc.
NODE_76_MINIMIZED = 1
NODE_76_PARAMETER = QTE_DB $QTE_DB
NODE_76_SOURCE =  NODE_75.NODE_40.
NODE_76_SOURCE_DESCRIPTION = NODE_75.NODE_40. FillsIn.
NODE_76_X = 562
NODE_76_Y = 648
NODE_79 = NESTED_OTQ ___ME___::_BeforeAfterAggregations
NODE_79_COMMENT = Find number of shares traded, number of trades and vwap for a preiood N seconds before and after fill time, where N = 1,10,15... etc seconds
NODE_79_MINIMIZED = 1
NODE_79_PARAMETER = TRD_DB $TRD_DB
NODE_79_SOURCE =  NODE_75.NODE_47.
NODE_79_SOURCE_DESCRIPTION = NODE_75.NODE_47. FILLS_IN.
NODE_79_X = 2830
NODE_79_Y = 648
NODE_80 = NESTED_OTQ ___ME___::_PrintPriceAndTime
NODE_80_COMMENT = Get last and next price/time for eah fill
NODE_80_MINIMIZED = 1
NODE_80_PARAMETER = TRD_DB $TRD_DB
NODE_80_SOURCE =  NODE_75.NODE_87.
NODE_80_SOURCE_DESCRIPTION = NODE_75.NODE_87. FillsIn.
NODE_80_X = 3736
NODE_80_Y = 648
NODE_85 = NESTED_OTQ ___ME___::_OffsetByTradeCount
NODE_85_COMMENT = Find prevailing bid and ask N trade ticks before and after fill time, where N is 10,100... etc.
NODE_85_MINIMIZED = 1
NODE_85_PARAMETER = QTE_DB $QTE_DB
NODE_85_PARAMETER = TRD_DB $TRD_DB
NODE_85_SOURCE =  NODE_75.NODE_47.
NODE_85_SOURCE_DESCRIPTION = NODE_75.NODE_47. FILLS_IN.
NODE_85_X = 1680
NODE_85_Y = 648
NODE_93 = PASSTHROUGH(FIELDS=".*INDEX",USE_REGEX=true,DROP_FIELDS=true)
NODE_93_SOURCE =  NODE_94
NODE_93_X = 2028
NODE_93_Y = 1550
NODE_94 = JOIN_SAME_SIZE_TS
NODE_94_SOURCE =  NODE_76..ROOT NODE_85..ROOT NODE_79..ROOT NODE_80..ROOT
NODE_94_SOURCE_DESCRIPTION = NODE_76..ROOT .OUT
NODE_94_SOURCE_DESCRIPTION = NODE_85..ROOT .OUT
NODE_94_SOURCE_DESCRIPTION = NODE_79..ROOT .OUT
NODE_94_SOURCE_DESCRIPTION = NODE_80..ROOT .OUT
NODE_94_X = 1828
NODE_94_Y = 1142
one_to_many_symbol_mapping = 0
PARAMETER = CSV_FILE FILLS20060601.csv
PARAMETER = CSV_DB DEMO_L1
PARAMETER = QTE_DB FULL_DEMO_L1
PARAMETER = SLICES 1
PARAMETER = TRD_DB FULL_DEMO_L1
PARAMETER = SLICE 1
QUERY_BATCH_SIZE = 20
ROOT = RENAME_FIELDS(RENAME_FIELDS="OffsetByTime\\.(.*)=\\1,\
OffsetByCount\\.(.*)=\\1,\
Aggregations\\.(.*)=\\1,\
PrintPriceAndTime\\.(.*)=\\1",USE_REGEX=true,FIELDS_TO_SKIP=".*TIMESTAMP")
ROOT_SOURCE =  NODE_93
ROOT_X = 2028
ROOT_Y = 1834
SECURITY = AAPL 0 No
SECURITY = eval(THIS::GetCSVSymbols,SLICE=$SLICE,SLICES=$SLICES,CSV_FILE=$CSV_FILE,CSV_DB=$CSV_DB) 0
SECURITY = ALLB 0 No
SECURITY = CSCO 0 No
SHOW_TEMPLATE = 
TYPE = GRAPH

[_OffsetByTradeCount]
COMMENT = 
CPU_NUMBER = 8
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_37 = PASSTHROUGH(FIELDS="BID_PRICE,ASK_PRICE")
NODE_37_NAME = Q
NODE_37_NESTED_INPUT =  QuotesIn
NODE_37_TICK_TYPE = $QTE_DB::QTE
NODE_37_X = 912
NODE_37_Y = 128
NODE_47 = PASSTHROUGH
NODE_47_NESTED_INPUT =  FILLS_IN
NODE_47_X = 256
NODE_47_Y = 140
NODE_51 = PASSTHROUGH(FIELDS=PRICE)
NODE_51_NAME = T
NODE_51_NESTED_INPUT =  TradesIN
NODE_51_TICK_TYPE = $TRD_DB::TRD
NODE_51_X = 2394
NODE_51_Y = 128
NODE_52 = JOIN_BY_TIME(SOURCE_ORDER="T,Q",LEADING_SOURCES=T)
NODE_52_SOURCE =  NODE_37 NODE_51
NODE_52_X = 1484
NODE_52_Y = 362
NODE_54 = ADD_FIELDS(FIELDS="W10TA_MARK_BID=Q.BID_PRICE[10],\
W10TB_MARK_BID=Q.BID_PRICE[-10],\
W10TA_MARK_ASK=Q.ASK_PRICE[10],\
W10TB_MARK_ASK=Q.ASK_PRICE[-10],\
W20TA_MARK_BID=Q.BID_PRICE[20],\
W20TB_MARK_BID=Q.BID_PRICE[-20],\
W20TA_MARK_ASK=Q.ASK_PRICE[20],\
W20TB_MARK_ASK=Q.ASK_PRICE[-20],\
W25TA_MARK_BID=Q.BID_PRICE[25],\
W25TB_MARK_BID=Q.BID_PRICE[-25],\
W25TA_MARK_ASK=Q.ASK_PRICE[25],\
W25TB_MARK_ASK=Q.ASK_PRICE[-25],\
W50TA_MARK_BID=Q.BID_PRICE[50],\
W50TB_MARK_BID=Q.BID_PRICE[-50],\
W50TA_MARK_ASK=Q.ASK_PRICE[50],\
W50TB_MARK_ASK=Q.ASK_PRICE[-50],\
W100TA_MARK_BID=Q.BID_PRICE[100],\
W100TB_MARK_BID=Q.BID_PRICE[-100],\
W100TA_MARK_ASK=Q.ASK_PRICE[100],\
W100TB_MARK_ASK=Q.ASK_PRICE[-100],\
W200TB_MARK_BID=Q.BID_PRICE[-200],\
W200TA_MARK_ASK=Q.ASK_PRICE[200],\
W200TB_MARK_ASK=Q.ASK_PRICE[-200],\
W300TA_MARK_BID=Q.BID_PRICE[300],\
W300TB_MARK_BID=Q.BID_PRICE[-300],\
W300TA_MARK_ASK=Q.ASK_PRICE[300],\
W300TB_MARK_ASK=Q.ASK_PRICE[-300],\
W300TA_MARK_PRICE=T.PRICE[300],\
W500TA_MARK_BID=Q.BID_PRICE[500],\
W500TB_MARK_BID=Q.BID_PRICE[-500],\
W500TA_MARK_ASK=Q.ASK_PRICE[500],\
W500TB_MARK_ASK=Q.ASK_PRICE[-500]")
NODE_54_NAME = T
NODE_54_SOURCE =  NODE_57
NODE_54_X = 1760
NODE_54_Y = 738
NODE_56 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_56_NAME = F
NODE_56_SOURCE =  NODE_47
NODE_56_X = 260
NODE_56_Y = 796
NODE_57 = TABLE(FIELDS="Q.BID_PRICE double(0),Q.ASK_PRICE double(0),Q.TIMESTAMP msectime(0),T.PRICE double (0),T.TIMESTAMP double(0)",KEEP_INPUT_FIELDS=true)
NODE_57_SOURCE =  NODE_52
NODE_57_X = 1700
NODE_57_Y = 574
NODE_59 = JOIN_BY_TIME(SOURCE_ORDER="F,T",LEADING_SOURCES=F)
NODE_59_SOURCE =  NODE_56 NODE_54
NODE_59_X = 1498
NODE_59_Y = 944
NODE_60 = ADD_FIELD(FIELD=W_OBC_DUMMY,VALUE=0)
NODE_60_SOURCE =  NODE_62
NODE_60_X = 1502
NODE_60_Y = 1368
NODE_62 = RENAME_FIELDS(RENAME_FIELDS="T\\.(.*)=\\1",USE_REGEX=true,FIELDS_TO_SKIP=".*TIMESTAMP")
NODE_62_NAME = OffsetByCount
NODE_62_SOURCE =  NODE_59
NODE_62_X = 1498
NODE_62_Y = 1162
one_to_many_symbol_mapping = 0
PARAMETER = SLICES 100
PARAMETER = SLICE 6
QUERY_BATCH_SIZE = 10
ROOT = PASSTHROUGH(FIELDS="W.*",USE_REGEX=true)
ROOT_NAME = OffsetByCount
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_60
ROOT_X = 1504
ROOT_Y = 1574
SECURITY = AAPL 0 No
SECURITY = eval(THIS::GetSymbolSlice,SLICE=$SLICE,SLICES=$SLICES) 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_OffsetByTime]
COMMENT = 
CPU_NUMBER = 8
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_37 = PASSTHROUGH(FIELDS="BID_PRICE,ASK_PRICE")
NODE_37_NAME = Q
NODE_37_NESTED_INPUT =  QuotesIn
NODE_37_TICK_TYPE = $QTE_DB::QTE
NODE_37_X = 2240
NODE_37_Y = 138
NODE_40 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_40_COMMENT = Add an ID to fills. Unique, sequential,complete
NODE_40_NAME = T
NODE_40_NESTED_INPUT =  FillsIn
NODE_40_X = 744
NODE_40_Y = 134
NODE_41 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_41_NAME = Q
NODE_41_SOURCE =  NODE_37
NODE_41_X = 2240
NODE_41_Y = 400
NODE_43 = JOIN_BY_TIME(SOURCE_ORDER="T,Q")
NODE_43_COMMENT = Full join - No leading source so we will see all Fills and Quotes
NODE_43_SOURCE =  NODE_40 NODE_41
NODE_43_X = 1444
NODE_43_Y = 578
NODE_44 = TABLE(FIELDS="T.INDEX int(0),Q.BID_PRICE double(0), Q.ASK_PRICE double(0),Q.TIMESTAMP msectime(0)",KEEP_INPUT_FIELDS=true)
NODE_44_COMMENT = Ensure that potentially missing fields are there
NODE_44_SOURCE =  NODE_43
NODE_44_X = 1450
NODE_44_Y = 760
NODE_46 = ADD_FIELDS(FIELDS="W1SA_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",1000,\"LAST_AT_OR_BEFORE\"),nan()),\
W1SB_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",-1000),nan()),\
W1SA_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",1000,\"LAST_AT_OR_BEFORE\"),nan()),\
W1SB_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",-1000),nan()),\
W60SA_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",60000,\"LAST_AT_OR_BEFORE\"),nan()),\
W60SB_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",-60000),nan()),\
W60SA_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",60000,\"LAST_AT_OR_BEFORE\"),nan()),\
W60SB_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",-60000),nan()),\
W30SA_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",30000,\"LAST_AT_OR_BEFORE\"),nan()),\
W30SB_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",-30000),nan()),\
W30SA_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",30000,\"LAST_AT_OR_BEFORE\"),nan()),\
W30SB_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",-30000),nan()),\
W15SA_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",15000,\"LAST_AT_OR_BEFORE\"),nan()),\
W15SB_MARK_BID = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.BID_PRICE\",-15000),nan()),\
W15SA_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",15000,\"LAST_AT_OR_BEFORE\"),nan()),\
W15SB_MARK_ASK = CASE(T.INDEX!=T.INDEX[-1],1,TIME_SHIFT(\"Q.ASK_PRICE\",-15000),nan()),\
LAST_QUOTE_TIME = Q.TIMESTAMP,\
LAST_QUOTE_BID=Q.BID_PRICE ,\
LAST_QUOTE_ASK=Q.ASK_PRICE")
NODE_46_COMMENT = If this is the first time we see a Fill index then this tick was generated due to the arrival of a fill. So decorate it with offset bid/ask. Else just set offset prices to null
NODE_46_SOURCE =  NODE_44
NODE_46_X = 1450
NODE_46_Y = 950
NODE_49 = WHERE_CLAUSE(WHERE="T.INDEX!=T.INDEX[-1]")
NODE_49_COMMENT = Filter to output only ticks provoked by the arrival of a fill
NODE_49_SOURCE =  NODE_46
NODE_49_X = 1450
NODE_49_Y = 1150
NODE_51 = ADD_FIELD(FIELD=W_OBT_DUMMY,VALUE=0)
NODE_51_SOURCE =  NODE_49..IF
NODE_51_X = 1356
NODE_51_Y = 1332
one_to_many_symbol_mapping = 0
PARAMETER = QTE_DB SPRY_UQDF_NBBO
QUERY_BATCH_SIZE = 10
ROOT = PASSTHROUGH(FIELDS="W.*,L.*",USE_REGEX=true)
ROOT_NAME = OffsetByTime
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_51
ROOT_X = 1360
ROOT_Y = 1532
SECURITY = AAPL 0
SECURITY = eval(THIS::GetSymbolSlice,SLICE=$SLICE,SLICES=$SLICES) 0 No
SHOW_TEMPLATE = 
TYPE = GRAPH

[_BeforeAfterAggregations]
COMMENT = 
CPU_NUMBER = 8
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AFOP
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AFSI
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AGEN
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AGIO
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AGNC
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AINV
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AIRM
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AKAM
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::AKRX
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::ALDR
HIDDEN_COLUMN = F.FILL JOIN_BY_TIME_FILLS_CS::ALGN
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AFOP
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AFSI
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AGEN
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AGIO
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AGNC
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AINV
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AIRM
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AKAM
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::AKRX
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::ALDR
HIDDEN_COLUMN = F.INDEX JOIN_BY_TIME_FILLS_CS::ALGN
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AFOP
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AFSI
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AGEN
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AGIO
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AGNC
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AINV
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AIRM
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AKAM
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::AKRX
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::ALDR
HIDDEN_COLUMN = F.OMDSEQ JOIN_BY_TIME_FILLS_CS::ALGN
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AFOP
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AFSI
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGEN
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGIO
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGNC
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AINV
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AIRM
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AKAM
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AKRX
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::ALDR
HIDDEN_COLUMN = F.TIMESTAMP JOIN_BY_TIME_FILLS_CS::ALGN
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AFOP
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AFSI
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGEN
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGIO
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AGNC
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AINV
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AIRM
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AKAM
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::AKRX
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::ALDR
HIDDEN_COLUMN = T.TIMESTAMP JOIN_BY_TIME_FILLS_CS::ALGN
NODE_37 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_37_NESTED_INPUT =  TradesIN
NODE_37_TICK_TYPE = $TRD_DB::TRD
NODE_37_X = 3998
NODE_37_Y = 198
NODE_40 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_40_COMMENT = Add an ID to fills. Unique, sequential,complete
NODE_40_NAME = F
NODE_40_SOURCE =  NODE_47
NODE_40_X = 1784
NODE_40_Y = 354
NODE_41 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_41_SOURCE =  NODE_37
NODE_41_X = 3994
NODE_41_Y = 392
NODE_47 = PASSTHROUGH
NODE_47_NESTED_INPUT =  FILLS_IN
NODE_47_X = 1780
NODE_47_Y = 160
NODE_65 = NESTED_OTQ ___ME___::_Aggregations
NODE_65_MINIMIZED = 1
NODE_65_PARAMETER = INTERVAL_UNITS SECONDS
NODE_65_PARAMETER = UNIT_TYPE S
NODE_65_PARAMETER = INTERVAL 60
NODE_65_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_65_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_65_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_65_X = 868
NODE_65_Y = 898
NODE_66 = NESTED_OTQ ___ME___::_Aggregations
NODE_66_MINIMIZED = 1
NODE_66_PARAMETER = INTERVAL_UNITS SECONDS
NODE_66_PARAMETER = UNIT_TYPE S
NODE_66_PARAMETER = INTERVAL 15
NODE_66_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_66_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_66_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_66_X = 1770
NODE_66_Y = 894
NODE_67 = NESTED_OTQ ___ME___::_Aggregations
NODE_67_MINIMIZED = 1
NODE_67_PARAMETER = INTERVAL_UNITS SECONDS
NODE_67_PARAMETER = UNIT_TYPE S
NODE_67_PARAMETER = INTERVAL 5
NODE_67_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_67_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_67_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_67_X = 2290
NODE_67_Y = 900
NODE_68 = NESTED_OTQ ___ME___::_Aggregations
NODE_68_MINIMIZED = 1
NODE_68_PARAMETER = INTERVAL_UNITS SECONDS
NODE_68_PARAMETER = UNIT_TYPE S
NODE_68_PARAMETER = INTERVAL 1
NODE_68_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_68_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_68_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_68_X = 2790
NODE_68_Y = 904
NODE_69 = NESTED_OTQ ___ME___::_Aggregations
NODE_69_MINIMIZED = 1
NODE_69_PARAMETER = INTERVAL_UNITS TICKS
NODE_69_PARAMETER = UNIT_TYPE T
NODE_69_PARAMETER = INTERVAL 10
NODE_69_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_69_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_69_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_69_X = 3260
NODE_69_Y = 902
NODE_70 = NESTED_OTQ ___ME___::_Aggregations
NODE_70_MINIMIZED = 1
NODE_70_PARAMETER = INTERVAL_UNITS TICKS
NODE_70_PARAMETER = UNIT_TYPE T
NODE_70_PARAMETER = INTERVAL 25
NODE_70_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_70_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_70_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_70_X = 3774
NODE_70_Y = 924
NODE_71 = NESTED_OTQ ___ME___::_Aggregations
NODE_71_MINIMIZED = 1
NODE_71_PARAMETER = INTERVAL_UNITS TICKS
NODE_71_PARAMETER = UNIT_TYPE T
NODE_71_PARAMETER = INTERVAL 50
NODE_71_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_71_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_71_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_71_X = 4352
NODE_71_Y = 944
NODE_72 = NESTED_OTQ ___ME___::_Aggregations
NODE_72_MINIMIZED = 1
NODE_72_PARAMETER = INTERVAL_UNITS TICKS
NODE_72_PARAMETER = UNIT_TYPE T
NODE_72_PARAMETER = INTERVAL 100
NODE_72_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_72_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_72_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_72_X = 4816
NODE_72_Y = 942
NODE_73 = NESTED_OTQ ___ME___::_Aggregations
NODE_73_MINIMIZED = 1
NODE_73_PARAMETER = INTERVAL_UNITS TICKS
NODE_73_PARAMETER = UNIT_TYPE T
NODE_73_PARAMETER = INTERVAL 200
NODE_73_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_73_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_73_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_73_X = 5290
NODE_73_Y = 942
NODE_74 = NESTED_OTQ ___ME___::_Aggregations
NODE_74_MINIMIZED = 1
NODE_74_PARAMETER = INTERVAL_UNITS TICKS
NODE_74_PARAMETER = UNIT_TYPE T
NODE_74_PARAMETER = INTERVAL 500
NODE_74_SOURCE =  NODE_41.NODE_3. NODE_40.NODE_8.
NODE_74_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_74_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_74_X = 5792
NODE_74_Y = 934
NODE_76 = JOIN_SAME_SIZE_TS
NODE_76_NAME = Aggregations
NODE_76_SOURCE =  NODE_65..ROOT NODE_66..ROOT NODE_67..ROOT NODE_68..ROOT NODE_69..ROOT NODE_70..ROOT NODE_71..ROOT NODE_72..ROOT NODE_73..ROOT NODE_74..ROOT NODE_80..ROOT
NODE_76_SOURCE_DESCRIPTION = NODE_65..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_66..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_67..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_68..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_69..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_70..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_71..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_72..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_73..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_74..ROOT .OUT
NODE_76_SOURCE_DESCRIPTION = NODE_80..ROOT .OUT
NODE_76_X = 3250
NODE_76_Y = 1582
NODE_79 = PASSTHROUGH(FIELDS=".*TIMESTAMP",USE_REGEX=true,DROP_FIELDS=true)
NODE_79_NAME = Aggregations
NODE_79_SOURCE =  NODE_76
NODE_79_X = 3266
NODE_79_Y = 1840
NODE_80 = NESTED_OTQ ___ME___::_Aggregations
NODE_80_MINIMIZED = 1
NODE_80_PARAMETER = INTERVAL_UNITS SECONDS
NODE_80_PARAMETER = UNIT_TYPE S
NODE_80_PARAMETER = INTERVAL 30
NODE_80_SOURCE =  NODE_40.NODE_8. NODE_41.NODE_3.
NODE_80_SOURCE_DESCRIPTION = NODE_40.NODE_8. FillsIn.
NODE_80_SOURCE_DESCRIPTION = NODE_41.NODE_3. TradesIN.
NODE_80_X = 1320
NODE_80_Y = 898
NODE_82 = ADD_FIELD(FIELD=W_AGGR_DUMMY,VALUE=0)
NODE_82_SOURCE =  NODE_83
NODE_82_X = 2492
NODE_82_Y = 1592
NODE_83 = RENAME_FIELDS(RENAME_FIELDS="([^.]+)\\.([^.]+)=\\2",USE_REGEX=true)
NODE_83_NAME = Aggregations
NODE_83_SOURCE =  NODE_79
NODE_83_X = 3274
NODE_83_Y = 2110
one_to_many_symbol_mapping = 0
PARAMETER = SLICES 100
PARAMETER = TRD_DB SPRY_UTDF
PARAMETER = SLICE 5
QUERY_BATCH_SIZE = 10
ROOT = PASSTHROUGH(FIELDS="W.*",USE_REGEX=true)
ROOT_NAME = Aggregations
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_82
ROOT_X = 2490
ROOT_Y = 1780
SECURITY = AAPL 0 No
SECURITY = eval(THIS::GetSymbolSlice,SLICE=$SLICE,SLICES=$SLICES) 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_PrintPriceAndTime]
COMMENT = 
CPU_NUMBER = 12
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_80 = PASSTHROUGH
NODE_80_NESTED_INPUT =  TradesIn
NODE_80_TICK_TYPE = $TRD_DB::TRD
NODE_80_X = 1736
NODE_80_Y = 92
NODE_82 = ADD_FIELDS(FIELDS="NEXT_TIME=TIMESTAMP[1]")
NODE_82_SOURCE =  NODE_80
NODE_82_X = 1736
NODE_82_Y = 316
NODE_84 = WHERE_CLAUSE(WHERE="NEXT_TIME!=TIMESTAMP")
NODE_84_COMMENT = Only get the last TRD for a particular timestamp.
NODE_84_SOURCE =  NODE_82
NODE_84_X = 1736
NODE_84_Y = 558
NODE_85 = ADD_FIELDS(FIELDS="NEXT_PRICE=PRICE[1],\
NEXT_BUT1_PRICE=PRICE[2],\
NEXT_BUT1_TIME=TIMESTAMP[2]")
NODE_85_NAME = T
NODE_85_SOURCE =  NODE_84..IF
NODE_85_X = 1764
NODE_85_Y = 824
NODE_87 = PASSTHROUGH(FIELDS=TIMESTAMP,DROP_FIELDS=true)
NODE_87_NAME = F
NODE_87_NESTED_INPUT =  FillsIn
NODE_87_X = 306
NODE_87_Y = 132
NODE_89 = JOIN_BY_TIME(SOURCE_ORDER="F,T",LEADING_SOURCES=F)
NODE_89_SOURCE =  NODE_87 NODE_85
NODE_89_X = 1194
NODE_89_Y = 1054
NODE_92 = ADD_FIELDS(FIELDS="LAST_PRINT_PRICE=T.PRICE,\
LAST_PRINT_TIME=T.TIMESTAMP,\
NEXT_PRINT_PRICE=T.NEXT_PRICE,\
NEXT_PRINT_TIME=T.NEXT_TIME,\
USE_NEXT=\"\"")
NODE_92_SOURCE =  NODE_94
NODE_92_X = 1194
NODE_92_Y = 1338
NODE_93 = UPDATE_FIELDS(SET="NEXT_PRINT_PRICE=T.NEXT_BUT1_PRICE,NEXT_PRINT_TIME=T.NEXT_BUT1_TIME,USE_NEXT=\"Y\"",WHERE="F.TIMESTAMP=T.NEXT_TIME")
NODE_93_SOURCE =  NODE_92
NODE_93_X = 1194
NODE_93_Y = 1568
NODE_94 = TABLE(FIELDS="T.PRICE,T double(0),\
T.TIMESTAMP msectime(0),\
T.NEXT_PRICE double(0),\
T.NEXT_TIME msectime(0),\
T.NEXT_BUT1_PRICE double(0),\
T.NEXT_BUT1_TIME msectime(0)",KEEP_INPUT_FIELDS=true)
NODE_94_SOURCE =  NODE_89
NODE_94_X = 1188
NODE_94_Y = 1202
one_to_many_symbol_mapping = 0
PARAMETER = CSV_FILE aapl_fills.csv
PARAMETER = SLICES 1
PARAMETER = TRD_DB CS_TAQ
PARAMETER = SLICE 1
QUERY_BATCH_SIZE = 20
ROOT = TABLE(FIELDS="F.TIMESTAMP,\
LAST_PRINT_TIME,\
LAST_PRINT_PRICE,\
NEXT_PRINT_TIME,\
NEXT_PRINT_PRICE")
ROOT_NAME = PrintPriceAndTime
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_93
ROOT_X = 1194
ROOT_Y = 1828
SECURITY = AAPL 0 No
SECURITY = eval(THIS::GetCSVSymbols,SLICE=$SLICE,SLICES=$SLICES,CSV_FILE=$CSV_FILE) 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_Aggregations]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_11 = RENAME_FIELDS(RENAME_FIELDS="SUM=W${INTERVAL}${UNIT_TYPE}B_SHARES,\
NUM_TICKS=W${INTERVAL}${UNIT_TYPE}B_TRADES,\
VWAP=W${INTERVAL}${UNIT_TYPE}B_VWAP,\
FIRST=W${INTERVAL}${UNIT_TYPE}B_MARK_PRICE,\
FIRST_TIME=W${INTERVAL}${UNIT_TYPE}B_MARK_TIME")
NODE_11_NAME = T
NODE_11_SOURCE =  NODE_6
NODE_11_X = 2168
NODE_11_Y = 780
NODE_12 = PASSTHROUGH(FIELDS="F\\.(.*),.*TIMESTAMP",USE_REGEX=true,DROP_FIELDS=true)
NODE_12_COMMENT = Drop fields from fill
NODE_12_SOURCE =  NODE_14
NODE_12_X = 1468
NODE_12_Y = 1544
NODE_13 = PASSTHROUGH(FIELDS="W.*",USE_REGEX=true)
NODE_13_NAME = T
NODE_13_SOURCE =  NODE_11
NODE_13_X = 2176
NODE_13_Y = 960
NODE_14 = ADD_FIELD(FIELD="DUMMY${INTERVAL}${UNIT_TYPE}",VALUE=0)
NODE_14_COMMENT = Can get a situation where we have no prior market data so only "F." fields. We can't drop all fields in the next EP.
NODE_14_SOURCE =  NODE_9
NODE_14_X = 1470
NODE_14_Y = 1322
NODE_3 = COMPUTE(COMPUTE="VWAP,NUM_TICKS,SUM,FIRST,LAST,FIRST_TIME,LAST_TIME",BUCKET_INTERVAL="$INTERVAL",BUCKET_INTERVAL_UNITS="$INTERVAL_UNITS",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_3_COMMENT = Note - Show_all_fields=false. This is equivalent to All_fields_for_sliding=false, i.e we want an output event for exit as well as entrance input events.
NODE_3_NAME = W${INTERVAL}${UNIT_TYPE}B
NODE_3_NESTED_INPUT =  TradesIN
NODE_3_X = 2166
NODE_3_Y = 210
NODE_4 = TABLE(FIELDS="SUM,VWAP,NUM_TICKS,FIRST,LAST,FIRST_TIME,LAST_TIME")
NODE_4_SOURCE =  NODE_3
NODE_4_X = 2170
NODE_4_Y = 470
NODE_6 = ADD_FIELDS(FIELDS="W${INTERVAL}${UNIT_TYPE}A_VWAP=CASE(\"$UNIT_TYPE\"=\"S\",1,time_shift(\"VWAP\",${INTERVAL}000,\"LAST_AT_OR_BEFORE\"),VWAP[$INTERVAL]),\
W${INTERVAL}${UNIT_TYPE}A_SHARES=CASE(\"$UNIT_TYPE\"=\"S\",1,time_shift(\"SUM\",${INTERVAL}000,\"LAST_AT_OR_BEFORE\"),SUM[$INTERVAL]),\
W${INTERVAL}${UNIT_TYPE}A_TRADES=CASE(\"$UNIT_TYPE\"=\"S\",1,time_shift(\"NUM_TICKS\",${INTERVAL}000,\"LAST_AT_OR_BEFORE\"),NUM_TICKS[$INTERVAL]),\
W${INTERVAL}${UNIT_TYPE}A_MARK_PRICE=CASE(\"$UNIT_TYPE\"=\"S\",1,time_shift(\"LAST\",${INTERVAL}000,\"LAST_AT_OR_BEFORE\"),LAST[$INTERVAL]),\
W${INTERVAL}${UNIT_TYPE}A_MARK_TIME=CASE(\"$UNIT_TYPE\"=\"S\",1,time_shift(\"LAST_TIME\",${INTERVAL}000,\"LAST_AT_OR_BEFORE\"),LAST_TIME[$INTERVAL])")
NODE_6_SOURCE =  NODE_4
NODE_6_X = 2170
NODE_6_Y = 624
NODE_8 = PASSTHROUGH
NODE_8_NAME = F
NODE_8_NESTED_INPUT =  FillsIn
NODE_8_X = 908
NODE_8_Y = 854
NODE_9 = JOIN_BY_TIME(SOURCE_ORDER="F,T",LEADING_SOURCES=F,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_LATEST)
NODE_9_SOURCE =  NODE_8 NODE_13
NODE_9_X = 1472
NODE_9_Y = 1116
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = RENAME_FIELDS(RENAME_FIELDS="T\\.(.*)=\\1",USE_REGEX=true,FIELDS_TO_SKIP=".*TIMESTAMP")
ROOT_NAME = ${INTERVAL}${UNIT_TYPE}
ROOT_NESTED_OUTPUT =  OUT
ROOT_SOURCE =  NODE_12
ROOT_X = 1472
ROOT_Y = 1780
SHOW_TEMPLATE = 
TYPE = GRAPH

[GetCSVSymbols]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NODE_10 = NUM_TICKS(BUCKET_TIME=BUCKET_START)
NODE_10_NAME = TOTAL
NODE_10_SOURCE =  NODE_8
NODE_10_X = 1000
NODE_10_Y = 688
NODE_11 = DISTINCT(KEYS=SYMBOL_NAME)
NODE_11_SOURCE =  NODE_2
NODE_11_X = 1968
NODE_11_Y = 276
NODE_2 = CSV_FILE_LISTING
NODE_2_TICK_TYPE = $CSV_DB::FILLS
NODE_2_X = 1966
NODE_2_Y = 90
NODE_4 = VALUE_COMPARE(FIELD=SLICE,VALUE="$SLICE",RELATIONSHIP_TO_CONST=EQ)
NODE_4_SOURCE =  NODE_5
NODE_4_X = 1966
NODE_4_Y = 1484
NODE_5 = ADD_FIELD(FIELD=SLICE,VALUE="MIN(DIV(SYMBOLS.INDEX,TOTAL.SLICE_SIZE)+1,$SLICES)")
NODE_5_SOURCE =  NODE_6
NODE_5_X = 1966
NODE_5_Y = 1222
NODE_6 = JOIN_BY_TIME(JOIN_TYPE=INNER,SOURCE_ORDER="SYMBOLS,TOTAL",LEADING_SOURCES=SYMBOLS,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST)
NODE_6_SOURCE =  NODE_7 NODE_9
NODE_6_X = 2580
NODE_6_Y = 1020
NODE_7 = NUM_TICKS(IS_RUNNING_AGGR=true,OUTPUT_FIELD_NAME=INDEX)
NODE_7_NAME = SYMBOLS
NODE_7_SOURCE =  NODE_8
NODE_7_X = 2966
NODE_7_Y = 688
NODE_8 = ORDER_BY(ORDER_BY="TIMESTAMP asc, SYMBOL_NAME ASC")
NODE_8_SOURCE =  NODE_11
NODE_8_X = 1968
NODE_8_Y = 468
NODE_9 = ADD_FIELD(FIELD=SLICE_SIZE,VALUE="DIV(VALUE,$SLICES)")
NODE_9_NAME = TOTAL
NODE_9_SOURCE =  NODE_10
NODE_9_X = 630
NODE_9_Y = 960
one_to_many_symbol_mapping = 0
PARAMETER = CSV_FILE FILLS20060601.csv
PARAMETER = CSV_DB LOCAL
PARAMETER = SLICES 4
PARAMETER = SLICE 2
QUERY_BATCH_SIZE = 0
ROOT = RENAME_FIELDS(RENAME_FIELDS="SYMBOLS.SYMBOL_NAME=SYMBOL_NAME")
ROOT_SOURCE =  NODE_4..IF
ROOT_X = 1968
ROOT_Y = 1728
SECURITY = $CSV_FILE 0
SHOW_TEMPLATE = 
TYPE = GRAPH

[_meta]
app_version = OneTick Display Build tag: BUILD_20160311162858 Build timestamp : 20160311162858
ApplyTimesDaily = 0
end = 20060601160000000
file_version = 1.0
RunningQuery = 0
start = 20060601093000000
SYMBOL_DATE = 
TZ = EST5EDT
USER_NAME = Maria
